version: '3.5'

services:
  database:
    container_name: local_database
    build:
      context: .docker/postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - '5432:5432'
    volumes:
      - 'local-database:/var/lib/postgresql/data'
  zookeeper:
    container_name: local_zookeeper
    image: confluentinc/cp-zookeeper:latest
    ports:
      - '2181:2181'
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    container_name: local_kafka
    image: confluentinc/cp-kafka:latest
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  keycloak:
    container_name: local_keycloak
    image: quay.io/keycloak/keycloak:18.0.0
    environment:
      - 'KEYCLOAK_ADMIN=admin'
      - 'KEYCLOAK_ADMIN_PASSWORD=admin'
    ports:
      - '28080:8080'
    restart: unless-stopped
    command:
      - 'start-dev'
  mongo:
    container_name: local_mongo
    build:
      context: .docker/mongo
    ports:
      - '27017:27017'
    volumes:
      - 'local-mongo:/data/db'
  redis:
    container_name: local_redis
    image: redis:latest
    volumes:
      - 'local-redis:/data'
    ports:
      - '6379:6379'
  flagr:
    container_name: local_flagr
    image: checkr/flagr:latest
    ports:
      - '18000:18000'
  ibmmq:
    container_name: local_ibmmq
    image: ibmcom/mq:latest
    ports:
      - '1414:1414'
    environment:
      LICENSE: accept
      MQ_QMGR_NAME: MQA01
    stdin_open: true
    tty: true
    restart: always
  sonar:
    container_name: sonarqube_local
    image: sonarqube:latest
    ports:
      - '9000:9000'
      - '9092:9092'

volumes:
  local-database:
    driver: local
  local-mongo:
    driver: local
  local-redis:
    driver: local
