version: '3.5'

services:
  database:
    container_name: local_database
    build:
      context: .docker/postgres
    environment:
      - 'POSTGRES_DB=${DB_NAME}'
      - 'POSTGRES_USER=${DB_USER}'
      - 'POSTGRES_PASSWORD=${DB_PASSWORD}'
    ports:
      - '5432:5432'
    volumes:
      - 'local-database:/var/lib/postgresql/data'
  zookeeper:
    container_name: local_zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
     - 'ZOOKEEPER_CLIENT_PORT=2181'
     - 'ZOOKEEPER_TICK_TIME=2000'
    ports:
      - '22181:2181'
  kafka:
    container_name: local_kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - '29092:29092'
    environment:
      - 'KAFKA_BROKER_ID=1'
      - 'KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181'
      - 'KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092'
      - 'KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      - 'KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT'
      - 'KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1'
  keycloak:
    container_name: local_keycloak
    image: quay.io/keycloak/keycloak:18.0.0
    environment:
      - 'KEYCLOAK_ADMIN=admin'
      - 'KEYCLOAK_ADMIN_PASSWORD=admin'
    ports:
      - '28080:8080'
    restart: unless-stopped
    command:
      - 'start-dev'
  mongo:
    container_name: local_mongo
    build:
      context: .docker/mongo
    ports:
      - '27017:27017'
    volumes:
      - 'local-mongo:/data/db'
  redis:
    container_name: local_redis
    image: redis:latest
    volumes:
      - 'local-redis:/data'
    ports:
      - '6379:6379'
  flagr:
    container_name: local_flagr
    image: checkr/flagr:latest
    ports:
      - '18000:18000'

volumes:
  local-database:
    driver: local
  local-mongo:
    driver: local
  local-redis:
    driver: local
  local-zookeeper:
    driver: local
  local-kafka:
    driver: local
